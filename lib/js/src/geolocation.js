// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';


function setRNConfiguration(skipPermissionRequests, _) {
  var tmp = { };
  if (skipPermissionRequests) {
    tmp.skipPermissionRequests = skipPermissionRequests[0];
  }
  navigator.geolocation.setRNConfiguration(tmp);
  return /* () */0;
}

function getCurrentPosition(timeout, maximumAge, enableHighAccuracy, success, error) {
  var tmp = { };
  if (timeout) {
    tmp.timeout = timeout[0];
  }
  if (maximumAge) {
    tmp.maximumAge = maximumAge[0];
  }
  if (enableHighAccuracy) {
    tmp.enableHighAccuracy = enableHighAccuracy[0];
  }
  navigator.geolocation.getCurrentPosition(success, error, tmp);
  return /* () */0;
}

function watchPosition(timeout, maximumAge, enableHighAccuracy, distanceFilter, useSignificantChanges, success, error) {
  var tmp = { };
  if (timeout) {
    tmp.timeout = timeout[0];
  }
  if (maximumAge) {
    tmp.maximumAge = maximumAge[0];
  }
  if (enableHighAccuracy) {
    tmp.enableHighAccuracy = enableHighAccuracy[0];
  }
  if (distanceFilter) {
    tmp.distanceFilter = distanceFilter[0];
  }
  if (useSignificantChanges) {
    tmp.useSignificantChanges = useSignificantChanges[0];
  }
  return navigator.geolocation.watchPosition(success, error, tmp);
}

function requestAuthorization() {
  navigator.geolocation.requestAuthorization();
  return /* () */0;
}

function stopObserving() {
  navigator.geolocation.stopObserving();
  return /* () */0;
}

function clearWatch(prim) {
  navigator.geolocation.clearWatch(prim);
  return /* () */0;
}

exports.setRNConfiguration = setRNConfiguration;
exports.requestAuthorization = requestAuthorization;
exports.stopObserving = stopObserving;
exports.getCurrentPosition = getCurrentPosition;
exports.watchPosition = watchPosition;
exports.clearWatch = clearWatch;
/* No side effect */
