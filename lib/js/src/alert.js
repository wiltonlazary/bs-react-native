// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var Js_undefined = require("bs-platform/lib/js/js_undefined.js");
var ReactNative = require("react-native");
var UtilsRN$BsReactNative = require("./private/utilsRN.js");

function alert(title, message, buttons, options, type_, _) {
  var msg = Js_undefined.fromOption(message);
  var transformButtons = function (xs) {
    return $$Array.map((function (param) {
                  return {
                          text: Js_undefined.fromOption(param[/* text */0]),
                          onPress: Js_undefined.fromOption(param[/* onPress */1]),
                          style: Js_undefined.fromOption(UtilsRN$BsReactNative.option_map((function (x) {
                                      if (x !== 465819841) {
                                        if (x >= 942927226) {
                                          return "cancel";
                                        } else {
                                          return "destructive";
                                        }
                                      } else {
                                        return "default";
                                      }
                                    }), param[/* style */2]))
                        };
                }), $$Array.of_list(xs));
  };
  var bts = Js_undefined.fromOption(UtilsRN$BsReactNative.option_map(transformButtons, buttons));
  var opts = Js_undefined.fromOption(UtilsRN$BsReactNative.option_map((function (param) {
              return {
                      cancelable: Js_undefined.fromOption(UtilsRN$BsReactNative.optBoolToOptJsBoolean(param[/* cancelable */0])),
                      onDismiss: Js_undefined.fromOption(param[/* onDismiss */1])
                    };
            }), options));
  var t_ = Js_undefined.fromOption(UtilsRN$BsReactNative.option_map((function (x) {
              if (x >= 780034244) {
                if (x >= 904380375) {
                  return "plain-text";
                } else {
                  return "sercure-text";
                }
              } else if (x >= 465819841) {
                return "default";
              } else {
                return "login-password";
              }
            }), type_));
  ReactNative.Alert.alert(title, msg, bts, opts, t_);
  return /* () */0;
}

exports.alert = alert;
/* react-native Not a pure module */
