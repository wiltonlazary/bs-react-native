// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Js_undefined = require("bs-platform/lib/js/js_undefined.js");
var ReactNative = require("react-native");
var Props$BsReactNative = require("../private/props.js");
var UtilsRN$BsReactNative = require("../private/utilsRN.js");

function encodeSize(size) {
  if (typeof size === "number") {
    if (size >= -9768761) {
      return "small";
    } else {
      return "large";
    }
  } else {
    return size[1];
  }
}

function make(animating, color, size, hidesWhenStopped, accessibilityLabel, accessible, hitSlop, onAccessibilityTap, onLayout, onMagicTap, responderHandlers, pointerEvents, removeClippedSubviews, style, testID, accessibilityComponentType, accessibilityLiveRegion, collapsable, importantForAccessibility, needsOffscreenAlphaCompositing, renderToHardwareTextureAndroid, accessibilityTraits, accessibilityViewIsModal, shouldRasterizeIOS) {
  var partial_arg = Props$BsReactNative.extendView(accessibilityLabel, accessible, hitSlop, onAccessibilityTap, onLayout, onMagicTap, responderHandlers, pointerEvents, removeClippedSubviews, style, testID, accessibilityComponentType, accessibilityLiveRegion, collapsable, importantForAccessibility, needsOffscreenAlphaCompositing, renderToHardwareTextureAndroid, accessibilityTraits, accessibilityViewIsModal, shouldRasterizeIOS, {
        animating: Js_undefined.fromOption(UtilsRN$BsReactNative.optBoolToOptJsBoolean(animating)),
        color: Js_undefined.fromOption(color),
        size: Js_undefined.fromOption(UtilsRN$BsReactNative.option_map(encodeSize, size)),
        hidesWhenStopped: Js_undefined.fromOption(UtilsRN$BsReactNative.optBoolToOptJsBoolean(hidesWhenStopped))
      });
  var partial_arg$1 = ReactNative.ActivityIndicator;
  return (function (param) {
      return ReasonReact.wrapJsForReason(partial_arg$1, partial_arg, param);
    });
}

exports.make = make;
/* ReasonReact Not a pure module */
