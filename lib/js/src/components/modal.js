// Generated by BUCKLESCRIPT VERSION 3.1.5, PLEASE EDIT WITH CARE
'use strict';

var $$Array = require("bs-platform/lib/js/array.js");
var ReasonReact = require("reason-react/lib/js/src/ReasonReact.js");
var Js_undefined = require("bs-platform/lib/js/js_undefined.js");
var ReactNative = require("react-native");
var UtilsRN$BsReactNative = require("../private/utilsRN.js");

function encodeAnimationType(x) {
  if (x !== -922086728) {
    if (x >= -20462287) {
      return "slide";
    } else {
      return "fade";
    }
  } else {
    return "none";
  }
}

function encodeSupportedOrientations(xs) {
  return $$Array.map((function (x) {
                if (x !== -55740357) {
                  if (x >= 923863087) {
                    if (x >= 951001435) {
                      return "portrait";
                    } else {
                      return "portrait-upside-down";
                    }
                  } else if (x >= 402056674) {
                    return "landscape-left";
                  } else {
                    return "landscape-right";
                  }
                } else {
                  return "landscape";
                }
              }), xs);
}

function make(animationType, onShow, transparent, visible, hardwareAccelerated, onRequestClose, onOrientationChange, supportedOrientations) {
  var partial_arg = {
    animationType: Js_undefined.fromOption(UtilsRN$BsReactNative.option_map(encodeAnimationType, animationType)),
    onShow: Js_undefined.fromOption(onShow),
    transparent: Js_undefined.fromOption(UtilsRN$BsReactNative.optBoolToOptJsBoolean(transparent)),
    visible: Js_undefined.fromOption(UtilsRN$BsReactNative.optBoolToOptJsBoolean(visible)),
    hardwareAccelerated: Js_undefined.fromOption(UtilsRN$BsReactNative.optBoolToOptJsBoolean(hardwareAccelerated)),
    onRequestClose: Js_undefined.fromOption(onRequestClose),
    onOrientationChange: Js_undefined.fromOption(onOrientationChange),
    supportedOrientations: Js_undefined.fromOption(UtilsRN$BsReactNative.option_map(encodeSupportedOrientations, supportedOrientations))
  };
  var partial_arg$1 = ReactNative.Modal;
  return (function (param) {
      return ReasonReact.wrapJsForReason(partial_arg$1, partial_arg, param);
    });
}

exports.make = make;
/* ReasonReact Not a pure module */
