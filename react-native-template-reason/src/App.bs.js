// Generated by BUCKLESCRIPT VERSION 5.0.1, PLEASE EDIT WITH CARE

import * as Block from "bs-platform/lib/es6/block.js";
import * as Caml_option from "bs-platform/lib/es6/caml_option.js";
import * as ReasonReact from "reason-react/src/ReasonReact.js";
import * as Caml_js_exceptions from "bs-platform/lib/es6/caml_js_exceptions.js";
import * as Text$BsReactNative from "bs-react-native/src/components/text.bs.js";
import * as View$BsReactNative from "bs-react-native/src/components/view.bs.js";
import * as Style$BsReactNative from "bs-react-native/src/style.bs.js";
import * as Platform$BsReactNative from "bs-react-native/src/platform.bs.js";
import * as StyleSheet$BsReactNative from "bs-react-native/src/styleSheet.bs.js";

var instructions;

var exit = 0;

var val;

try {
  val = Platform$BsReactNative.os(/* () */0);
  exit = 1;
}
catch (raw_exn){
  var exn = Caml_js_exceptions.internalToOCamlException(raw_exn);
  if (exn[0] === Platform$BsReactNative.UnknownPlatform) {
    instructions = exn[1] === "web" ? "Press Cmd+R to reload." : "";
  } else {
    throw exn;
  }
}

if (exit === 1) {
  instructions = val ? "Press Cmd+R to reload,\nCmd+D or shake for dev menu" : "Double tap R on your keyboard to reload,\nShake or press menu button for dev menu";
}

var styles = StyleSheet$BsReactNative.create({
      container: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.flex(1),
            /* :: */[
              Style$BsReactNative.justifyContent(/* Center */2),
              /* :: */[
                Style$BsReactNative.alignItems(/* Center */2),
                /* :: */[
                  Style$BsReactNative.backgroundColor(/* String */Block.__(0, ["#F5FCFF"])),
                  /* [] */0
                ]
              ]
            ]
          ]),
      welcome: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.fontSize(/* Float */Block.__(0, [20])),
            /* :: */[
              Style$BsReactNative.textAlign(/* Center */3),
              /* :: */[
                Style$BsReactNative.margin(/* Pt */Block.__(0, [10])),
                /* [] */0
              ]
            ]
          ]),
      instructions: Style$BsReactNative.style(/* :: */[
            Style$BsReactNative.textAlign(/* Center */3),
            /* :: */[
              Style$BsReactNative.color(/* String */Block.__(0, ["#333333"])),
              /* :: */[
                Style$BsReactNative.marginBottom(/* Pt */Block.__(0, [5])),
                /* [] */0
              ]
            ]
          ])
    });

function app(param) {
  return ReasonReact.element(undefined, undefined, View$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Caml_option.some(styles.container), undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined)(/* array */[
                  ReasonReact.element(undefined, undefined, Text$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Caml_option.some(styles.welcome), undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["Welcome to (Bs) React Native!"])),
                  ReasonReact.element(undefined, undefined, Text$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Caml_option.some(styles.instructions), undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */["To get started, edit src/App.re"])),
                  ReasonReact.element(undefined, undefined, Text$BsReactNative.make(undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, undefined, Caml_option.some(styles.instructions), undefined, undefined, undefined, undefined, undefined, undefined, undefined, /* array */[instructions]))
                ]));
}

export {
  instructions ,
  styles ,
  app ,
  
}
/* instructions Not a pure module */
