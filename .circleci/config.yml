aliases:
  # Cache Management
  - &yarn-cache-restore
    keys:
      - yarn-cache-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
  - &yarn-cache-save
    paths:
      - ~/.cache/yarn
    key: yarn-cache-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}

  - &opam-cache-restore
    keys:
      - opam-cache-{{ checksum ".circleci/config.yml" }}
      - opam-cache
  - &opam-cache-save
    key: opam-cache-{{ checksum ".circleci/config.yml" }}
    paths:
      - ~/.opam/

  # Branch Filtering
  - &filter-ignore-gh-pages
    branches:
      ignore: gh-pages
  - &filter-only-master
    branches:
      only:
        - master

  # Commands
  - &opam-setup
    name: Setup opam
    command: |
      sudo apt-get install -y m4
      opam init --auto-setup --dot-profile=~/.bash_profile
      opam remote add ocamlorg https://opam.ocaml.org || true
      opam remote remove default || true
  - &opam-get-deps
    name: Install opam dependencies
    command: |
      eval $(opam config env)
      if [[ ! -x "odoc" ]]; then
        opam update
        opam install -y odoc
      fi
  - &node-setup
    name: "Setup node"
    command: |
      curl -sL https://deb.nodesource.com/setup_10.x | sudo -E bash -
      sudo apt-get install -y nodejs
      mkdir -p ~/.npm-global
      npm config set prefix $NPM_CONFIG_PREFIX
  - &yarn-setup
    name: "Setup yarn"
    command: |
      curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | sudo apt-key add -
      echo "deb https://dl.yarnpkg.com/debian/ stable main" | sudo tee /etc/apt/sources.list.d/yarn.list
      sudo apt-get update && sudo apt-get install yarn
      echo 'export PATH=$PATH:`yarn global bin`' >> $BASH_ENV
  - &node-get-deps-with-yarn
    name: Install Node deps with Yarn
    command: |
      yarn install --non-interactive --frozen-lockfile --cache-folder ~/.cache/yarn
  - &tests-run
    name: "Run tests"
    command: |
      yarn test
  - &website-build
    name: "Build documentation"
    command: |
      eval $(opam config env)
      cd ./website
      yarn build
  - &website-deploy-to-gh-pages
    name: Deploy documentation to GH Pages
    command: |
      cd ./website/dist/bs-react-native
      git init

      git config credential.helper 'cache --timeout=120'
      git config user.email "nobody@circleci.com"
      git config user.name "CircleCI"

      git remote add origin https://${GITHUB_TOKEN}@github.com/reasonml-community/bs-react-native.git

      git add . --force
      git commit -m "Website update [ci skip]"

      git push origin HEAD:gh-pages --quiet --force

defaults: &defaults
  docker:
    - image: circleci/node:10
  working_directory: ~/bs-react-native

version: 2
jobs:
  test:
    <<: *defaults
    docker:
      - image: ocaml/opam2:debian-9-ocaml-4.02.3
    environment:
      - TERM: dumb
    steps:
      - checkout
      # Install Node.js & Yarn as we are on an ocaml docker image
      - run: *node-setup
      - run: *yarn-setup
      # Install Node.js dependencies using Yarn
      - restore-cache: *yarn-cache-restore
      - run: *node-get-deps-with-yarn
      - save-cache: *yarn-cache-save
      # Tests
      - run: *tests-run
      # Documentation
      - run: *opam-setup
      - restore-cache: *opam-cache-restore
      - run: *opam-get-deps
      - save-cache: *opam-cache-save
      - run: *website-build
      ## Save website for deployments
      - persist_to_workspace:
          root: .
          paths:
            - website

  website-deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/bs-react-native
      - run: *website-deploy-to-gh-pages

workflows:
  version: 2
  test:
    jobs:
      - test:
          filters: *filter-ignore-gh-pages

      - website-deploy:
          filters: *filter-only-master
          requires:
            - test
